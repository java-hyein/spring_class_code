<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                                 http://www.springframework.org/schema/beans/spring-beans.xsd
                                 http://www.springframework.org/schema/security
                                 http://www.springframework.org/schema/security/spring-security.xsd">
                                 
				<!-- 검사 URL -->
				<!--  순서가 정해져있어서 지켜야한다.  -->
			    <http auto-config="true" use-expressions="true">
			        <intercept-url pattern="/login/loginForm" access="permitAll" />
			        <intercept-url pattern="/" access="permitAll" />
			        <intercept-url pattern="/admin/**" access="hasRole('ADMIN')" />
			        <intercept-url pattern="/**" access="hasAnyRole('USER, ADMIN')" />
			        
			        <!-- 로그인 인증을 처리할 주소는 /login/loginForm 이다.  -->
			        <!--   default-target-url="/" : 로그인이 완료되면 "/" 로 이동  -->
			        <!-- authentication-failure-url="/login/loginForm?error" :  로그인 실패시  "/login/loginForm?error" 로 간다. -->
			        <!--  username-parameter="id" ,  로그인 폼에 아이디 입력 필드에 사용될 name 입니다. 기본 값은 "username" -->
			       <!--  password-parameter="password" , 로그인 폼에 아이디 입력 필드에 사용될 password 입니다. 기본 값은 "password"  -->
			        <form-login login-page="/login/loginForm"
			                    default-target-url="/"
			                    authentication-failure-url="/login/loginForm?error"
			                    username-parameter="id"
			                    password-parameter="password" />
			        <!-- logout-success-url="/"  :  로그 아웃이 잘 되었다면 홈 화면 으로 가라 -->
			        <logout logout-url="/logout"
			                logout-success-url="/" />  
			                <!-- 접근 허용 안되면  "/login/accessDenied"  링크를 태운다. -->
			        <access-denied-handler error-page="/login/accessDenied" />
			    </http>
			    <!--  기존 작성된 데이터 베이스 연동 방식 -->
			   
			      <!--  provider  -->
      <authentication-manager>
        <authentication-provider>
        <jdbc-user-service 
            data-source-ref="dataSource"
			users-by-username-query="select ename, empno, 1  from emp where ename = ?"
  			authorities-by-username-query="select ename,case when job='MANAGER' then 'ROLE_ADMIN' else  'ROLE_USER' end authority from emp where ename=?"            
        />
        </authentication-provider>
    </authentication-manager> 
  
   
</beans:beans>